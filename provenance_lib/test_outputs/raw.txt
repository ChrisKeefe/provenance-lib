emp_single_end_dir_fmt = use.init_format('<your data here>', lambda: None)
imported_data = use.import_from_format('emp_single_end_sequences_0', 'EMPSingleEndSequences', emp_single_end_dir_fmt)
use.action(use.UsageAction(plugin_id='demux', action_id='emp_single'), use.UsageInputs(**{'seqs': 'emp_single_end_sequences_0', 'barcodes': MetadataInfo(input_artifact_uuids=[], relative_fp='barcodes.tsv'), 'rev_comp_barcodes': False, 'rev_comp_mapping_barcodes': False}), use.UsageOutputNames(**{'per_sample_sequences': 'per_sample_sequences_0'}))
use.action(use.UsageAction(plugin_id='dada2', action_id='denoise_single'), use.UsageInputs(**{'demultiplexed_seqs': 'per_sample_sequences_0', 'trunc_len': 120, 'trim_left': 0, 'max_ee': 2.0, 'trunc_q': 2, 'chimera_method': 'consensus', 'min_fold_parent_over_abundance': 1.0, 'n_threads': 1, 'n_reads_learn': 1000000, 'hashed_feature_ids': True}), use.UsageOutputNames(**{'representative_sequences': 'representative_sequences_0', 'table': 'table_0'}))
use.action(use.UsageAction(plugin_id='phylogeny', action_id='align_to_tree_mafft_fasttree'), use.UsageInputs(**{'sequences': 'representative_sequences_0', 'n_threads': 1, 'mask_max_gap_frequency': 1.0, 'mask_min_conservation': 0.4}), use.UsageOutputNames(**{'rooted_tree': 'rooted_tree_0'}))
use.action(use.UsageAction(plugin_id='diversity', action_id='core_metrics_phylogenetic'), use.UsageInputs(**{'table': 'table_0', 'phylogeny': 'rooted_tree_0', 'sampling_depth': 1109, 'metadata': MetadataInfo(input_artifact_uuids=[], relative_fp='metadata.tsv'), 'n_jobs': 1}), use.UsageOutputNames(**{'unweighted_unifrac_emperor': 'unweighted_unifrac_emperor_0'}))